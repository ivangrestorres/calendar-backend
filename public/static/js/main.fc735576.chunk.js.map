{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/eventReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","helpers/prepare-events.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginPage.jsx","components/ui/Navbar.jsx","components/calendar/CalendarEvent.jsx","helpers/calendar-messages.js","actions/ui.js","components/calendar/CalendarModal.jsx","components/ui/AddNewFab.jsx","components/ui/DeleteEventFab.jsx","components/calendar/CalendarPage.jsx","routers/PrivateRoute.jsx","routers/PublicRoute.jsx","routers/AppRouter.jsx","CalendarApp.jsx","index.js"],"names":["types","initalState","checking","events","activeEvent","initialState","modalOpen","rootReducer","combineReducers","ui","state","action","type","event","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseURL","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","prepareEvents","end","moment","toDate","start","eventAddNew","eventClearActive","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","useForm","useState","values","setValues","handleOnChange","target","name","value","reset","LoginPage","useDispatch","l_email","l_password","formLoginValues","handleLoginInputChange","r_name","r_email","r_password","r_password2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","respuesta","json","ok","uid","msg","setItem","Date","getTime","Swal","fire","placeholder","onChange","n","Navbar","useSelector","onClick","CalendarEvent","title","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","nowMoment","minutes","seconds","add","endMoment","clone","CalendarModal","startDate","setStartDate","endDate","setEndDate","formSubmited","setFormSubmited","notes","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","resp","console","log","getState","newEvent","evento","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarPage","lastView","setLastView","startAccessor","endAccessor","onDoubleClickEvent","onSelectEvent","onSelectSlot","selectable","onView","eventPropGetter","backgroundColor","borderRadius","opacity","display","color","cursor","components","view","PrivateRoute","isAuthenticated","Component","component","rest","location","pathname","props","to","PublicRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fc735576.chunk.js","sourcesContent":["export const types = {\r\n    uiOpenModal: \"[ui] Open modal\",\r\n    uiCloseModal: \"[ui] Close modal\",\r\n\r\n    eventSetActive: \"[event] Set active\",\r\n    eventClean: \"[event] Clean\",\r\n    eventStartAddNew: \"[event] Start add new\",\r\n    eventAddNew: \"[event] Add new\",\r\n    eventUpdated: \"[event] Updated\",\r\n    eventDeleted: \"[event] Deleted\",\r\n    eventClearActive: \"[event] Clear active\",\r\n    eventStartLoading: \"[event] Start loading\",\r\n    eventLoaded: \"[event] Loaded\",\r\n\r\n    authCheckingFinish: \"[Auth] Finish checking login state\",\r\n    authStartLogin: \"[Auth] Start login\",\r\n    authLogin: \"[Auth] Login\",\r\n    authStartRegister: \"[Auth] Start register\",\r\n    authStartTokenRenew: \"[Auth] Start token renew\",\r\n    authLogout: \"[Auth] Logout\",\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nconst initalState = {\r\n    checking: true,\r\n};\r\n\r\nexport const authReducer = (state = initalState, action) => {\r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                checking: false,\r\n                ...action.payload,\r\n            };\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false,\r\n            };\r\n        case types.authLogout:\r\n            return { ...initalState, checking: false };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\n// {\r\n//     id: new Date().getTime(),\r\n//     title: \"Cumpleaños\",\r\n//     start: moment().toDate(),\r\n//     end: moment().add(2, \"hours\").toDate(),\r\n//     notes: \"\",\r\n//     user: { _id: \"123\", name: \"Ivan\" },\r\n// }\r\n\r\nconst initalState = {\r\n    events: [],\r\n    activeEvent: null,\r\n};\r\n\r\nexport const eventReducer = (state = initalState, action) => {\r\n    switch (action.type) {\r\n        case types.eventSetActive:\r\n            return { ...state, activeEvent: action.payload };\r\n        case types.eventAddNew:\r\n            return { ...state, events: [...state.events, action.payload] };\r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map((e) =>\r\n                    e.id === action.payload.id ? action.payload : e\r\n                ),\r\n            };\r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(\r\n                    (e) => e.id !== state.activeEvent.id\r\n                ),\r\n                activeEvent: null,\r\n            };\r\n        case types.eventClearActive:\r\n            return { ...state, activeEvent: null };\r\n        case types.eventLoaded:\r\n            return { ...state, events: [...action.payload] };\r\n        case types.eventClean:\r\n            return { ...initalState };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false,\r\n};\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return { ...state, modalOpen: true };\r\n        case types.uiCloseModal:\r\n            return { ...state, modalOpen: false };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { eventReducer } from \"./eventReducer\";\r\nimport { uiReducer } from \"./uiReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    event: eventReducer,\r\n    auth: authReducer,\r\n});\r\n","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\n\r\nconst composeEnhancers =\r\n    (typeof window !== \"undefined\" &&\r\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\r\n    compose;\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(applyMiddleware(thunk))\r\n);\r\n","const baseURL = process.env.REACT_APP_API_URL;\r\n\r\nconst fetchSinToken = (endpoint, data, method = \"GET\") => {\r\n    const url = `${baseURL}/${endpoint}`;\r\n\r\n    if (method === \"GET\") {\r\n        return fetch(url);\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                \"Content-type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(data),\r\n        });\r\n    }\r\n};\r\n\r\nconst fetchConToken = (endpoint, data, method = \"GET\") => {\r\n    const url = `${baseURL}/${endpoint}`;\r\n\r\n    const token = localStorage.getItem(\"token\") || \"\";\r\n\r\n    if (method === \"GET\") {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                \"x-token\": token,\r\n            },\r\n        });\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                \"Content-type\": \"application/json\",\r\n                \"x-token\": token,\r\n            },\r\n            body: JSON.stringify(data),\r\n        });\r\n    }\r\n};\r\n\r\nexport { fetchSinToken, fetchConToken };\r\n","import moment from \"moment\";\r\n\r\nexport const prepareEvents = (events = []) => {\r\n    return events.map((e) => ({\r\n        ...e,\r\n        end: moment(e.end).toDate(),\r\n        start: moment(e.start).toDate(),\r\n    }));\r\n};\r\n","import Swal from \"sweetalert2\";\r\nimport { fetchConToken } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/prepare-events\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const eventStartAddNew = (event) => {\r\n    return async (dispatch, getState) => {\r\n        const { uid, name } = getState().auth;\r\n\r\n        try {\r\n            const resp = await fetchConToken(\"events\", event, \"POST\");\r\n            const { ok, evento: newEvent, msg } = await resp.json();\r\n\r\n            if (ok) {\r\n                event.id = newEvent.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name,\r\n                };\r\n\r\n                dispatch(eventAddNew(event));\r\n            } else {\r\n                Swal.fire(\"Error\", msg);\r\n            }\r\n        } catch (error) {\r\n            Swal.fire(\"Error\", \"Hable con el administrador\");\r\n        }\r\n    };\r\n};\r\n\r\nconst eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event,\r\n});\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event,\r\n});\r\n\r\nexport const eventClearActive = () => ({\r\n    type: types.eventClearActive,\r\n});\r\n\r\nexport const eventStartUpdate = (event) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const resp = await fetchConToken(\r\n                `events/${event.id}`,\r\n                event,\r\n                \"PUT\"\r\n            );\r\n            const { ok, msg } = await resp.json();\r\n\r\n            if (ok) {\r\n                dispatch(eventUpdated(event));\r\n            } else {\r\n                Swal.fire(\"Error\", msg);\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n            Swal.fire(\"Error\", \"Hable con el administrador\");\r\n        }\r\n    };\r\n};\r\n\r\nconst eventUpdated = (event) => ({\r\n    type: types.eventUpdated,\r\n    payload: event,\r\n});\r\n\r\nexport const eventStartDelete = (event) => {\r\n    return async (dispatch, getState) => {\r\n        const { activeEvent } = getState().event;\r\n\r\n        try {\r\n            const resp = await fetchConToken(\r\n                `events/${activeEvent.id}`,\r\n                {},\r\n                \"DELETE\"\r\n            );\r\n            const { ok, msg } = await resp.json();\r\n\r\n            if (ok) {\r\n                dispatch(eventDeleted());\r\n            } else {\r\n                Swal.fire(\"Error\", msg);\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n            Swal.fire(\"Error\", \"Hable con el administrador\");\r\n        }\r\n    };\r\n};\r\n\r\nconst eventDeleted = () => ({\r\n    type: types.eventDeleted,\r\n});\r\n\r\nexport const eventStartLoading = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const resp = await fetchConToken(\"events\");\r\n            const { ok, events, msg } = await resp.json();\r\n\r\n            if (ok) {\r\n                dispatch(eventLoaded(prepareEvents(events)));\r\n            } else {\r\n                Swal.fire(\"Error\", msg);\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n            Swal.fire(\"Error\", \"Hable con el administrador\");\r\n        }\r\n    };\r\n};\r\n\r\nconst eventLoaded = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events,\r\n});\r\n\r\nexport const eventClean = () => ({\r\n    type: types.eventClean,\r\n});\r\n","import Swal from \"sweetalert2\";\r\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\nimport { eventClean } from \"./events\";\r\n\r\nexport const startLogin = (email, password) => {\r\n    return async (dispatch) => {\r\n        const respuesta = await fetchSinToken(\r\n            \"auth\",\r\n            { email, password },\r\n            \"POST\"\r\n        );\r\n\r\n        const { ok, token, uid, name, msg } = await respuesta.json();\r\n\r\n        if (ok) {\r\n            localStorage.setItem(\"token\", token);\r\n            localStorage.setItem(\"token-init-date\", new Date().getTime());\r\n\r\n            dispatch(\r\n                login({\r\n                    uid,\r\n                    name,\r\n                })\r\n            );\r\n        } else {\r\n            Swal.fire(\"Error\", msg);\r\n        }\r\n    };\r\n};\r\n\r\nexport const startRegister = (n, email, password) => {\r\n    return async (dispatch) => {\r\n        const respuesta = await fetchSinToken(\r\n            \"auth/new\",\r\n            { name: n, email, password },\r\n            \"POST\"\r\n        );\r\n\r\n        const { ok, token, uid, name, msg } = await respuesta.json();\r\n\r\n        if (ok) {\r\n            localStorage.setItem(\"token\", token);\r\n            localStorage.setItem(\"token-init-date\", new Date().getTime());\r\n\r\n            dispatch(\r\n                login({\r\n                    uid,\r\n                    name,\r\n                })\r\n            );\r\n        } else {\r\n            Swal.fire(\"Error\", msg);\r\n        }\r\n    };\r\n};\r\n\r\nexport const startChecking = () => {\r\n    return async (dispatch) => {\r\n        const respuesta = await fetchConToken(\"auth/renew\");\r\n\r\n        const { ok, token, uid, name, msg } = await respuesta.json();\r\n\r\n        if (ok) {\r\n            localStorage.setItem(\"token\", token);\r\n            localStorage.setItem(\"token-init-date\", new Date().getTime());\r\n\r\n            dispatch(\r\n                login({\r\n                    uid,\r\n                    name,\r\n                })\r\n            );\r\n        } else {\r\n            dispatch(checkingFinish());\r\n        }\r\n    };\r\n};\r\n\r\nconst checkingFinish = () => ({\r\n    type: types.authCheckingFinish,\r\n});\r\n\r\nconst login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user,\r\n});\r\n\r\nexport const startLogout = () => {\r\n    return (dispatch) => {\r\n        localStorage.clear();\r\n\r\n        dispatch(eventClean());\r\n        dispatch(logout());\r\n    };\r\n};\r\n\r\nconst logout = () => ({\r\n    type: types.authLogout,\r\n});\r\n","import { useState } from \"react\";\r\n\r\nexport const useForm = (initialState = {}) => {\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const handleOnChange = ({ target }) => {\r\n        setValues({ ...values, [target.name]: target.value });\r\n    };\r\n\r\n    const reset = () => {\r\n        setValues(initialState);\r\n    };\r\n\r\n    return [values, handleOnChange, setValues, reset];\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Swal from \"sweetalert2\";\r\nimport { startLogin, startRegister } from \"../../actions/auth\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\nimport \"./login.css\";\r\n\r\nexport const LoginPage = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [formLoginValues, handleLoginInputChange] = useForm({\r\n        l_email: \"ivangrestorres@hotmail.com\",\r\n        l_password: \"123456\",\r\n    });\r\n\r\n    const [formRegisterValues, handleRegisterInputChange] = useForm({\r\n        r_name: \"\",\r\n        r_email: \"\",\r\n        r_password: \"\",\r\n        r_password2: \"\",\r\n    });\r\n\r\n    const { l_email, l_password } = formLoginValues;\r\n    const { r_name, r_email, r_password, r_password2 } = formRegisterValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n\r\n        dispatch(startLogin(l_email, l_password));\r\n    };\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (r_password !== r_password2) {\r\n            return Swal.fire(\"Error\", \"Las contraseñas deben ser iguales\");\r\n        }\r\n\r\n        dispatch(startRegister(r_name, r_email, r_password));\r\n    };\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={handleLogin}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name={\"l_email\"}\r\n                                value={l_email}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name={\"l_password\"}\r\n                                value={l_password}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\"\r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={handleRegister}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                value={r_name}\r\n                                name={\"r_name\"}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                value={r_email}\r\n                                name={\"r_email\"}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                value={r_password}\r\n                                name={\"r_password\"}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\"\r\n                                value={r_password2}\r\n                                name={\"r_password2\"}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Crear cuenta\"\r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { startLogout } from \"../../actions/auth\";\r\n\r\nexport const Navbar = () => {\r\n    const dispatch = useDispatch();\r\n    const { name } = useSelector((state) => state.auth);\r\n\r\n    const handleOnClick = () => {\r\n        dispatch(startLogout());\r\n    };\r\n\r\n    return (\r\n        <div className={\"navbar navbar-dark bg-dark mb-4\"}>\r\n            <span className={\"navbar-brand\"}>{name}</span>\r\n            <button onClick={handleOnClick} className=\"btn btn-outline-danger\">\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Salir</span>\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const CalendarEvent = ({ event }) => {\r\n    const { title, user } = event;\r\n    return (\r\n        <div>\r\n            <strong>{title}</strong>\r\n            <div>{user.name}</div>\r\n        </div>\r\n    );\r\n};\r\n","export const messages = {\r\n    allDay: \"Todo el día\",\r\n    previous: \"<\",\r\n    next: \">\",\r\n    today: \"Hoy\",\r\n    month: \"Mes\",\r\n    week: \"Semana\",\r\n    day: \"Día\",\r\n    agenda: \"Agenda\",\r\n    date: \"Fecha\",\r\n    time: \"Hora\",\r\n    event: \"Evento\",\r\n    noEventsInRange: \"No hay eventos en este rango\",\r\n    showMore: (total) => `+ Ver más (${total})`,\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nexport const uiOpenModal = () => ({\r\n    type: types.uiOpenModal,\r\n});\r\n\r\nexport const uiCloseModal = () => ({\r\n    type: types.uiCloseModal,\r\n});\r\n","import moment from \"moment\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DateTimePicker from \"react-datetime-picker\";\r\nimport Modal from \"react-modal\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { uiCloseModal } from \"../../actions/ui\";\r\nimport {\r\n    eventClearActive,\r\n    eventStartAddNew,\r\n    eventStartUpdate,\r\n} from \"../../actions/events\";\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        right: \"auto\",\r\n        bottom: \"auto\",\r\n        marginRight: \"-50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n    },\r\n};\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst nowMoment = moment().minutes(0).seconds(0).add(1, \"hours\");\r\nconst endMoment = nowMoment.clone().add(1, \"hours\");\r\n\r\nexport const CalendarModal = () => {\r\n    const dispatch = useDispatch();\r\n    const { modalOpen } = useSelector((state) => state.ui);\r\n    const { activeEvent } = useSelector((state) => state.event);\r\n\r\n    const [startDate, setStartDate] = useState(nowMoment.toDate());\r\n    const [endDate, setEndDate] = useState(endMoment.toDate());\r\n    const [formSubmited, setFormSubmited] = useState(false);\r\n\r\n    const [formValues, handleOnChange, setFormValues, reset] = useForm({\r\n        title: \"\",\r\n        notes: \"\",\r\n        start: nowMoment.toDate(),\r\n        end: endMoment.toDate(),\r\n    });\r\n\r\n    const { notes, title, start, end } = formValues;\r\n    useEffect(() => {\r\n        if (activeEvent) {\r\n            setFormValues({ ...activeEvent });\r\n            setStartDate(activeEvent.start);\r\n            setEndDate(activeEvent.end);\r\n        } else {\r\n            reset();\r\n            setStartDate(nowMoment.toDate());\r\n            setEndDate(endMoment.toDate());\r\n        }\r\n    }, [activeEvent, setFormValues]);\r\n\r\n    const closeModal = () => {\r\n        reset();\r\n        setFormSubmited(false);\r\n        dispatch(uiCloseModal());\r\n        dispatch(eventClearActive());\r\n    };\r\n\r\n    const handleStartDateChange = (e) => {\r\n        setStartDate(e);\r\n        setFormValues({ ...formValues, start: e });\r\n    };\r\n\r\n    const handleEndDateChange = (e) => {\r\n        setEndDate(e);\r\n        setFormValues({ ...formValues, end: e });\r\n    };\r\n\r\n    const handleOnSubmit = (e) => {\r\n        e.preventDefault();\r\n        setFormSubmited(true);\r\n\r\n        const momentStart = moment(start);\r\n        const momentEnd = moment(end);\r\n\r\n        if (momentStart.isSameOrAfter(momentEnd)) {\r\n            return Swal.fire(\r\n                \"Error\",\r\n                \"Fecha fin debe ser mayor que fecha inicio\",\r\n                \"error\"\r\n            );\r\n        }\r\n        if (title.trim().length < 3) {\r\n            return Swal.fire(\"Error\", \"El titulo es demasiado corto\", \"error\");\r\n        }\r\n\r\n        if (activeEvent) {\r\n            dispatch(eventStartUpdate(formValues));\r\n        } else {\r\n            dispatch(eventStartAddNew(formValues));\r\n        }\r\n        closeModal();\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={modalOpen}\r\n            onRequestClose={closeModal}\r\n            style={customStyles}\r\n            className={\"modal\"}\r\n            closeTimeoutMS={200}\r\n            overlayClassName={\"modal-fondo\"}\r\n        >\r\n            <h1> {activeEvent ? \"Editar evento\" : \"Nuevo evento\"} </h1>\r\n            <hr />\r\n            <form className=\"container\" onSubmit={handleOnSubmit}>\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        onChange={handleStartDateChange}\r\n                        name={\"startDate\"}\r\n                        value={startDate}\r\n                        className={\"form-control\"}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        onChange={handleEndDateChange}\r\n                        name={\"endDate\"}\r\n                        value={endDate}\r\n                        minDate={startDate}\r\n                        className={\"form-control\"}\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className={`form-control ${\r\n                            title.trim().length < 3 &&\r\n                            formSubmited &&\r\n                            \"is-invalid\"\r\n                        } ${title.trim().length >= 3 && \"is-valid\"}`}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        value={title}\r\n                        onChange={handleOnChange}\r\n                        autoComplete=\"off\"\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                        Una descripción corta\r\n                    </small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={notes}\r\n                        onChange={handleOnChange}\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                        Información adicional\r\n                    </small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n            </form>\r\n        </Modal>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { eventClearActive } from \"../../actions/events\";\r\nimport { uiOpenModal } from \"../../actions/ui\";\r\n\r\nexport const AddNewFab = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleOnClick = () => {\r\n        dispatch(eventClearActive());\r\n        dispatch(uiOpenModal());\r\n    };\r\n\r\n    return (\r\n        <button onClick={handleOnClick} className={\"btn btn-primary fab\"}>\r\n            <i className={\"fas fa-plus\"}></i>\r\n        </button>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { eventStartDelete } from \"../../actions/events\";\r\n\r\nexport const DeleteEventFab = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleOnClick = () => {\r\n        dispatch(eventStartDelete());\r\n    };\r\n\r\n    return (\r\n        <button onClick={handleOnClick} className={\"btn btn-danger fab-danger\"}>\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span> Borrar evento</span>\r\n        </button>\r\n    );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport moment from \"moment\";\r\n\r\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\r\nimport { Navbar } from \"../ui/Navbar\";\r\nimport { CalendarEvent } from \"./CalendarEvent\";\r\n\r\nimport { messages } from \"../../helpers/calendar-messages\";\r\n\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\nimport \"moment/locale/es\";\r\nimport { CalendarModal } from \"./CalendarModal\";\r\nimport { uiOpenModal } from \"../../actions/ui\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n    eventClearActive,\r\n    eventSetActive,\r\n    eventStartLoading,\r\n} from \"../../actions/events\";\r\nimport { AddNewFab } from \"../ui/AddNewFab\";\r\nimport { DeleteEventFab } from \"../ui/DeleteEventFab\";\r\n\r\nmoment.locale(\"es\");\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nexport const CalendarPage = () => {\r\n    const dispatch = useDispatch();\r\n    const { events, activeEvent } = useSelector((state) => state.event);\r\n    const { uid } = useSelector((state) => state.auth);\r\n\r\n    const [lastView, setLastView] = useState(\r\n        localStorage.getItem(\"lastView\") || \"month\"\r\n    );\r\n\r\n    useEffect(() => {\r\n        dispatch(eventStartLoading());\r\n    }, [dispatch]);\r\n\r\n    const onDoubleClick = (e) => {\r\n        dispatch(uiOpenModal());\r\n    };\r\n\r\n    const onSelect = (e) => {\r\n        dispatch(eventSetActive(e));\r\n    };\r\n\r\n    const onViewChange = (e) => {\r\n        setLastView(e);\r\n        localStorage.setItem(\"lastView\", e);\r\n    };\r\n\r\n    const onSelectSlot = () => {\r\n        dispatch(eventClearActive());\r\n    };\r\n\r\n    const eventStyleGetter = (event) => {\r\n        const style = {\r\n            backgroundColor: uid === event.user._id ? \"#367CF7\" : \"#465660\",\r\n            borderRadius: \"0\",\r\n            opacity: 0.8,\r\n            display: \"block\",\r\n            color: \"white\",\r\n            cursor: uid === event.user._id ? \"pointer\" : \"not-allowed\",\r\n        };\r\n        return { style };\r\n    };\r\n\r\n    return (\r\n        <div className=\"calendar-page\">\r\n            <Navbar></Navbar>\r\n            <Calendar\r\n                messages={messages}\r\n                localizer={localizer}\r\n                startAccessor={\"start\"}\r\n                endAccessor={\"end\"}\r\n                events={events}\r\n                onDoubleClickEvent={onDoubleClick}\r\n                onSelectEvent={onSelect}\r\n                onSelectSlot={onSelectSlot}\r\n                selectable={true}\r\n                onView={onViewChange}\r\n                eventPropGetter={eventStyleGetter}\r\n                components={{ event: CalendarEvent }}\r\n                view={lastView}\r\n            />\r\n            <CalendarModal />\r\n            <AddNewFab></AddNewFab>\r\n            {!!activeEvent && <DeleteEventFab></DeleteEventFab>}\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    localStorage.setItem(\"lastpath\", rest.location.pathname);\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            component={(props) => {\r\n                if (isAuthenticated) {\r\n                    return <Component {...props} />;\r\n                } else return <Redirect to=\"/login\" />;\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            component={(props) => {\r\n                if (!isAuthenticated) {\r\n                    return <Component {...props} />;\r\n                } else return <Redirect to=\"/\" />;\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired,\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect,\r\n} from \"react-router-dom\";\r\nimport { startChecking } from \"../actions/auth\";\r\nimport { LoginPage } from \"../components/auth/LoginPage\";\r\nimport { CalendarPage } from \"../components/calendar/CalendarPage\";\r\nimport { PrivateRoute } from \"./PrivateRoute\";\r\nimport { PublicRoute } from \"./PublicRoute\";\r\n\r\nexport const AppRouter = () => {\r\n    const dispatch = useDispatch();\r\n    const { uid, checking } = useSelector((state) => state.auth);\r\n\r\n    useEffect(() => {\r\n        dispatch(startChecking());\r\n    }, [dispatch]);\r\n\r\n    if (checking) return <h5>Espere...</h5>;\r\n\r\n    return (\r\n        <div>\r\n            <Router>\r\n                <div>\r\n                    <Switch>\r\n                        <PublicRoute\r\n                            exact\r\n                            path=\"/login\"\r\n                            component={LoginPage}\r\n                            isAuthenticated={!!uid}\r\n                        ></PublicRoute>\r\n                        <PrivateRoute\r\n                            exact\r\n                            path=\"/\"\r\n                            isAuthenticated={!!uid}\r\n                            component={CalendarPage}\r\n                        ></PrivateRoute>\r\n                        <Redirect to=\"/\" />\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./store/store\";\r\n\r\nimport { AppRouter } from \"./routers/AppRouter\";\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter></AppRouter>\r\n        </Provider>\r\n    );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { CalendarApp } from \"./CalendarApp\";\n\nimport \"./styles.css\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <CalendarApp />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}